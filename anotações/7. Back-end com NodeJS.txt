Rocketseat Bootcamp GoStack - Nível 2

------> 7. Primeiro projeto com Node.JS
Nessa fase vamos aprender a configurar um projeto do total zero utilizando Node.js e
TypeScript incluindo ferramentas como ts-node-dev, ESLint, Prettier, EditorConfig

----> 1. Estrutura e padrões
--> Configurando estrutura
A primeira coisa a fazer é criar o arquivo package.json
  yarn init -y

Logo em seguida instalar as dependencias abaixo
  yarn add express
  yarn add typescript -D

Agora criar os demais arquivos essenciais para a API
  dist
  src\server.ts
  .gitignore
  readme

E por último criar o arquivo tsconfig.json para depois definir o local onde
salvar os arquivos convertido e onde fica o arquivo main
  yarn tsc --init
  "outDir": "./dist",
  "rootDir": "./src",

Para rodar o servidor temos que converter o TypeScript em JavaScript e depois
executar o arquivo main convertido
  yarn tsc
  node dist/server.js

O melhor metodo para executar o servidor durante o processo de desenvolvimento é
pela depencia abaixo, ele consegue executar o servidor sem converser o TypeScript para
JavaScript e quando acontece uma alteração o servidor é atualizado
  yarn add ts-node-dev -D
  yarn ts-node-dev src/server.ts

Quando digitamos algum comando errado o proprio IDE nos avisa, com isso podemos
adicionar o comando abaixo desativa esta verificacao na execução do servidor
  --transpileOnly

Tambem adicionamos o comando abaixo para ignorar a converção dos arquivos na
pasta node_modules e desativar a monitoração de alterações do mesmo
  --ignore-watch node_modules

Assim o comando para iniciar o servidor fica com esta composição
  yarn ts-node-dev --transpileOnly --ignore-watch node_modules src/server.ts

--> EditorConfig
O EditorConfig é uma ferramenta simples mais com uma funcionalidade incrivel
Ele padroniza configurações para quando abrir a API em outro IDE, editor de código ou em
outro computador para as configurações ficarem igual, para utilizar basta instalar a
extenção EditorConfig for VS Code no lado, depois clicar com o botão direiro na guia
e criar o arquivo .editorconfig e realizar as configurações abaixo
	root = true

		[*]
		indent_style = tab #TIPO DE RECUO
		indent_size = 2 #TAMANHO DO RECUO
		charset = utf-8 #TIPO DE CARACTER
		trim_trailing_whitespace = true #REMOVER ESPAÇOS EM BRANCO NO FINAL DA LINHA
		insert_final_newline = true #CRIAR UMA LINHA EM BRANCO NO FINAL DO ARQUIVO
		end_of_line = lf #TIPO DE ENTER (WINDOWS OU LINUX)

Tem dos comandos que força o programa a executar a padronização
  Reindent Lines (Atalho pessoal: Alt + E)
  Reindent Selected Lines

--> ESLint
O Eslint é ferramenta que realiza padronizações de códigos
Devemos instalar a extenção dele e também sua dependencia
  yarn add eslint -D

Depois de instalar devemos ativar as configurações abaixo para corrigir os códigos
quando realizarmos o salvamento do arquivo
	"[javascript]": {
		"editor.codeActionsOnSave": {
			source.fixAll.eslint": true,
		}
  },

  "[javascriptreact]":{
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": true,
		}
  },

  "[typescript]":{
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": true,
		}
  },

  "[typescriptreact]":{
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": true,
		}
  },

Para ele funcionar deve utilizar o comando abaixo e depois de executar o comando
deveremos que responder algumas pergutas como
  yarn eslint --init

  How would you like to use ESLint? = To check syntax, find problems, and enforce code style
  What type of modules does your project use? = JavaScript modules (import/export)
  Which framework does your project use? = None of these
  Does your project use TypeScript? = Yes
  Where does your code run? = Node
  How would you like to define a style for your project? = Use a popular style guide
  Which style guide do you want to follow? = Airbnb: https://github.com/airbnb/javascript
  What format do you want your config file to be in? = JSON

Depois de responder as perguntas sera gerado uma lista de dependencias para instalar
  yarn add @typescript-eslint/eslint-plugin@latest eslint-config-airbnb-base@latest eslint-plugin-import@^2.20.1 @typescript-eslint/parser@latest -D

Para o NodeJS entender os arquivos do TypeScript temos a dependencia abaixo
	yarn add eslint-import-resolver-typescript -D

Para procurar erros de padronização em todos os arquivo execute o comando abaixo
	yarn eslint .

Para corrigir todos os erros de padronização pode utilizar o comando abaixo
	yarn eslint . --fix
