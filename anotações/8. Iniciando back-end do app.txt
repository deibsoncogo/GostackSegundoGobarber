Rocketseat Bootcamp GoStack - Nível 2

------> 8. Iniciando back-end do app
Nessa etapa vamos continuar os aprendizados com Node.js aproveitando o projeto
desenvolvido até agora para começar a trabalhar com conceitos de banco de dados,
autenticação, autorização, etc.

----> 1. Banco de dados
--> Estratégias de abstração
Para trabalhar com banco de dados pricisamos lidar com o drive nativo da linguagem
gerando queries, para isso temos dependencias que facilita a criação

O Knex.js utiliza JavaScript e depois ele converte para SQL
O Object Relational Mapping (ORM) é o metodo mais facil para utilizar queries
	Sequelize para JavaScript
	TypeORM para TypeScript

O TypeORM funciona com a unificação do Knex.js tornando eficiente principal na
questão de mudança do tipo de banco de dados

--> Conceitos Docker
Docker serve para controlar os serviços externo da aplicação
Uma das coisas que ele serve é a criação de ambientes isolados (Container)
Os containers expõe portas para conseguir comunicar com eles
Imagens são ferramentas do Docker que podemos colocar dentro dos containers
E o container é a instancia de uma imagem
Docker Registry é onde fica salvo as imagens
Dockerfile premite nos criar imagens

--> Instalando Docker
Existe um arquivo mostrando como funciona o instalamento
Depois de instalar é nescessário executar ele e logar, isso se for a versão desktop

--> Criando container do banco
Para verificar todos comandos de postgres temos o site abaixo
	https://hub.docker.com/_/postgres

Para verificar se uma porta está sendo utilizada temos dois comandos abaixo para o Windows
Verifica uma porta expeficica, se tiver direcionada vai aparecer o programa que esta utilizando
	netstat -ano | findstr PORTA

Mostra todas portas em utilização
	netstat -o -a -b

Para criar a instancia devemos utilizar o comando abaixo
	docker run --name NOME -e POSTGRES_USER=LOGIN POSTGRES_PASSWORD=SENHA -p PORTA:PORTA -d IMAGEM
	docker run --name gostack_postgres -e POSTGRES_PASSWORD=docker -p 5432:5432 -d postgres

A segunda porta precisa ser 5432 pois está é a que o Docker utiliza, já a primeira será
a porta que o sistema utiliza onde para está podemos escolher qual usar

Para listar todos bancos de dados ou somente o ativo temos os comandos abaixo
	docker ps -a
	docker ps

Para buscar os logs de alteração, para iniciar ou parar temos os comandos abaixo
	docker logs ID ou NOME
	docker start ID ou NOME
	docker stop ID ou NOME

Para acessar o postgres (Banco de dados) temos o programa DBeaver

Para adicionar uma conexão clicamos no símbolo de tomada e adiconar,
estolhemos o tipo do banco de dados (PostgreSQL), informar a porta, nome da database,
o username e a senha, por último em PostgreSQL ativamos Show all databases

--> Configurando TypeORM
Primeiro de tudo temos que instalar o TypeORM
	yarn add typeorm

Para poder utilizar temos que realizar as configurações basicas
O site mostra todas as configurações possiveis
	https://typeorm.io/

As configurações devem ser salvas no seguinte arquivo
	ormconfig.json

Depois de configurar temos que instalar o drive do danco de dados PostgreSQL
	yarn add pg
